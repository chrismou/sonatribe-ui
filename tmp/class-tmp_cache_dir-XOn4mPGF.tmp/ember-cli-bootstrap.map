{"version":3,"sources":["ember-cli-bootstrap/utils/test-breadcrumbs.js","ember-cli-bootstrap/utils/test-helper.js","__reexport.js"],"sourcesContent":["define(\"ember-cli-bootstrap/utils/test-breadcrumbs\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    Bootstrap.BsBreadcrumbsItem = Bootstrap.ItemView.extend({\n      tagName: ['li'],\n      classNameBindings: [\"isActive:active\"],\n      template: Ember.Handlebars.compile('{{#unless view.isActive}}{{#if view.content.model}}{{#link-to view.content.route model.id}}{{view.content.name}}{{/link-to}}{{else}}{{#link-to view.content.route}}{{view.content.name}}{{/link-to}}{{/if}}{{else}}{{view.content.name}}{{/unless}}'),\n      isActive: (function() {\n        return this.get('content.active');\n      }).property('content.active')\n    });\n\n    Bootstrap.BsBreadcrumbs = Bootstrap.ItemsView.extend(Bootstrap.WithRouter, {\n      tagName: ['ol'],\n      classNames: ['breadcrumb'],\n      currentPathObserver: (function() {\n        this.get('router');\n        return this.send('updateCrumbsByRoute');\n      }).observes('router.url').on('init'),\n      content: [],\n      itemViewClass: Bootstrap.BsBreadcrumbsItem,\n      nameDictionary: void 0,\n      dictionaryNamePrefix: 'breadcrumbs',\n      actions: {\n        currentPathDidChange: function() {\n          return this.send('updateCrumbsByRoute');\n        },\n        updateCrumbsByRoute: function() {\n          var routes,\n          _this = this;\n          this.get('content').clear();\n          routes = this.get('container').lookup('router:main');\n          routes.get('router.currentHandlerInfos').forEach(function(route, i, arr) {\n            var crumb, displayName, name, routeName, _ref, _ref1, _ref2;\n            name = route.name;\n            if (name.indexOf('.index') !== -1 || name === 'application') {\n              return;\n            }\n            if ((_ref = route.handler.breadcrumbs) != null ? _ref.hidden : void 0) {\n              return;\n            }\n            routeName = route.handler.routeName;\n            if ((_ref1 = route.handler.breadcrumbs) != null ? _ref1.name : void 0) {\n              displayName = route.handler.breadcrumbs.name;\n            } else if ((_ref2 = _this.get('nameDictionary')) != null ? _ref2[\"\" + _this.dictionaryNamePrefix + \".\" + routeName] : void 0) {\n              displayName = _this.get('nameDictionary')[\"\" + _this.dictionaryNamePrefix + \".\" + routeName];\n            } else {\n              displayName = route.handler.routeName.split('.').pop();\n              displayName = displayName[0].toUpperCase() + displayName.slice(1).toLowerCase();\n            }\n            crumb = Ember.Object.create({\n              route: route.handler.routeName,\n              name: displayName,\n              model: null\n            });\n            if (_this.get('content').length === 0) {\n              crumb.set('icon', 'fa fa-home home-icon');\n            }\n            if (route.isDynamic) {\n              crumb.setProperties({\n                model: route.handler.context,\n                name: route.handler.context.get('name')\n              });\n            }\n            return _this.get('content').pushObject(crumb);\n          });\n          return this.get('content.lastObject').set('active', true);\n        }\n      }\n    });\n\n    __exports__[\"default\"] = Bootstrap.BsBreadcrumbs;\n  });","define(\"ember-cli-bootstrap/utils/test-helper\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = function testHelper(value, options) {\n      return new Ember.Handlebars.SafeString('you just used the test-helper with a value of: <b>' + value + '</b>');\n    };\n  });","define(\"ember-cli-bootstrap\", [\"ember-cli-bootstrap/index\",\"exports\"], function(__index__, __exports__) {\n  \"use strict\";\n  Object.keys(__index__).forEach(function(key){\n    __exports__[key] = __index__[key];\n  });\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;","file":"ember-cli-bootstrap.js"}